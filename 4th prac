clc; 
clear;
N = 10^6; % number of bits or symbols
% Transmitter
ip = rand(1, N) > 0.5; % generating 0,1 with equal probability
s = 2*ip - 1; % BPSK modulation 0 -> -1; 1 -> 0
Eb_N0_dB = (-3:35); % multiple Eb/N0 values
for ii = 1:length(Eb_N0_dB)
    n = (1/sqrt(2)) * (randn(1, N) + 1i*randn(1, N)); % white Gaussian noise, 0dB variance
    h = (1/sqrt(2)) * (randn(1, N) + 1i*randn(1, N)); % Rayleigh channel
    % Channel and noise Noise addition
    y = h.*s + 10^(-Eb_N0_dB(ii)/20)*n;
    % equalization
    yHat = y./h;
    % receiver - hard decision decoding
    ipHat = real(yHat) > 0;
    % counting the errors
    nErr(ii) = sum(ip ~= ipHat);
end
simBer = nErr/N; % simulated ber
theoryBerAWGN = 0.5*erfc(sqrt(10.^(Eb_N0_dB/10))); % theoretical ber
EbN0Lin = 10.^(Eb_N0_dB/10);
theoryBer = 0.5.*(1-sqrt(EbN0Lin./(EbN0Lin+1)));
% plot
figure; % open a new figure window
plot(Eb_N0_dB, theoryBerAWGN, 'cd-', 'LineWidth', 2);
hold on;
plot(Eb_N0_dB, theoryBer, 'r--', 'LineWidth', 2);
plot(Eb_N0_dB, simBer, 'bs-', 'LineWidth', 2);
hold off;
grid on;
title('BER for BPSK modulation in Rayleigh channel');
xlabel('Eb/No, dB');
ylabel('Bit Error Rate');
legend('AWGN-Theory', 'Rayleigh-Theory', 'Rayleigh-Simulation');
% Save figure to the PC
saveas(gcf, 'BER_plot.png'); % Save the current figure as a PNG file
